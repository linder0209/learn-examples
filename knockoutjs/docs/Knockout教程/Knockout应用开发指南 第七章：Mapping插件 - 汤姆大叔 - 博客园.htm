<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0060)http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html -->
<html xmlns="http://www.w3.org/1999/xhtml" lang="zh-cn"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script async="" type="text/javascript" src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/gpt.js"></script><script type="text/javascript" src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/encoder.js"></script>

<title>Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园</title>
<link type="text/css" rel="stylesheet" href="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/blog-common.css">
<link id="MainCss" type="text/css" rel="stylesheet" href="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/style.css">
<link type="text/css" rel="stylesheet" href="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/101461.css">
<link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/TomXu/rss">
<link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/TomXu/rsd.xml">
<link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/TomXu/wlwmanifest.xml">
<script src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/jquery.js" type="text/javascript"></script>  
<script type="text/javascript">var currentBlogApp = 'TomXu', cb_enable_mathjax=false;</script>
<script src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/blog-common.js" type="text/javascript"></script>
<script src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/skin.js" language="javascript" type="text/javascript"></script>
<script async="" type="text/javascript" src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/pubads_impl_32.js"></script><script type="text/javascript" src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/osd.js"></script></head>
<body>
<a name="top"></a>


<div id="container">
    <a class="minyx" href="http://www.spiga.com.mx/">Spiga</a>
    <ul id="topMnu">
        <!-- 统计数据 -->
        <li>
        
            
Posts - 128, 
Articles - 1, 
Comments - 15151
<!---->            
        
        </li>
        <!-- 这边可以增加一些链接 -->
        <!-- 博客园 -->
        <li><a href="http://www.cnblogs.com/">Cnblogs</a></li>
        <!-- 管理 -->
        <li id="topMnu-dashboard"><a id="lnkDashboard" href="http://www.cnblogs.com/TomXu/admin/EditPosts.aspx">Dashboard</a></li>
        <li><a id="lnkLogin" href="http://passport.cnblogs.com/login.aspx?ReturnUrl=http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html">Login</a></li>
    </ul>
    
    <script language="javascript" type="text/javascript">
        var m = window.__blog.topMenuRendered;
        if (m) { m(__$("topMnu")); }
    </script>

    <div id="header">
        <ul id="menu">
                <!-- 首页，当前section加上current类 -->
                <li id="menu-home" class="current"><a id="lnkHome" href="http://www.cnblogs.com/TomXu/">Home</a></li>
                <!-- 联系 -->
                <li id="menu-contact"><a id="lnkContact" href="http://space.cnblogs.com/msg/send/%e6%b1%a4%e5%a7%86%e5%a4%a7%e5%8f%94">Contact</a></li>
                <!-- 相册 -->
                <li id="menu-gallary"><a id="lnkGallery" href="http://www.cnblogs.com/TomXu/gallery.html">Gallery</a></li>
                <!-- Rss订阅 -->
                <li id="rss"><a id="lnkRss" href="http://www.cnblogs.com/TomXu/rss">RSS</a></li>
        </ul>
	<div id="newmsg"></div>
        <h1>
            <!-- 主标题 -->
            <a id="lnkBlogTitle" href="http://www.cnblogs.com/TomXu/">汤姆大叔的博客</a>
            <!-- 子标题 -->
            <small></small>
        </h1>
    </div>
    
    <script language="javascript" type="text/javascript">
        var m = window.__blog.headerRendered;
        if (m) { m(__$("header")); }
    </script>
        
    <div id="wrapper"> 
        <div id="content">
             <script language="javascript" type="text/javascript">
                        var m = window.__blog.preRenderPosts;
                        if (m) { m(); } 
            </script>
            

<div class="post" id="post"><a name="top"></a>
    <h2>
        <a id="ctl01_lnkTitle" href="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园.htm">Knockout应用开发指南 第七章：Mapping插件</a></h2>
    <small>
        2011-11-29 09:08
        by
        汤姆大叔,
        <span id="post_view_count">6285</span>
        阅读,
        <span id="post-comment-count"><span id="post_comment_count">12</span></span>
        评论,
        <a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#" onclick="PutInWz();return false;">收藏</a>,
        <a id="ctl01_lnkEdit" href="http://i.cnblogs.com/EditPosts.aspx?postid=2257054">编辑</a></small>
    <div class="entry">
        <div id="cnblogs_post_body"><h3>Mapping插件</h3>
<p>Knockout设计成允许你使用任何JavaScript对象作为view model。必须view model的一些属性是observable的，你可以使用KO绑定他们到你的UI元素上，当这些observable值改变的时候，这些UI元素就会自动更新。</p>
<p>绝大多数程序都需要从服务器端获取数据，但是由于服务器不知道observable的概念是什么，它只支持简单的JavaScript对象（通常是序列化以后的JSON），mapping插件可以让你很方便地将简单JavaScript对象mapp到带有observable值的view model。你也可以自己写JavaScript代码将从服务器获取的数据来构建 view model，mapping插件只是一种很好的替代而已。</p>
<p>&nbsp;<strong>下载</strong></p>
<p>&nbsp;&nbsp;&nbsp; <a href="https://github.com/SteveSanderson/knockout.mapping/tree/master/build/output" target="_blank">Version 2.0</a> （最小版本8.6kb）</p>
<p><strong><br></strong></p>
<p><strong>例子：手工mapping</strong></p>
<p>显示当前服务器时间和你网站上的当前用户数。你应该使用如下的view model来代表你的这些信息：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> viewModel = {<br>    serverTime: ko.observable(),<br>    numUsers: ko.observable()<br>}</pre>
</div>
<p>然后绑定view model到HTML元素上，如下：</p>
<div class="cnblogs_code">
<pre>The time on the server is: <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">span </span><span style="color: #ff0000;">data-bind</span><span style="color: #0000ff;">='text: </span><span style="color: #ff0000;">serverTime'</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">span</span><span style="color: #0000ff;">&gt;</span><br>and <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">span </span><span style="color: #ff0000;">data-bind</span><span style="color: #0000ff;">='text: </span><span style="color: #ff0000;">numUsers'</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">span</span><span style="color: #0000ff;">&gt;</span> user(s) are connected.</pre>
</div>
<p>由于view model属性是observable的，在他们变化的时候，KO会自动更新绑定的HTML元素。</p>
<p>接下来，从服务器获取最新的数据。或许每隔5秒你要调用一次Ajax请求（例如，使用jQuery的$.getJSON或$.ajax函授）：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> data = getDataUsingAjax();          <span style="color: #008000;">//</span><span style="color: #008000;"> Gets the data from the server</span></pre>
</div>
<p>然后，服务器返回和下面相似的JSON数据：</p>
<div class="cnblogs_code">
<pre>{<br>    serverTime: '2010-01-07',<br>    numUsers: 3<br>}</pre>
</div>
<p>最后，用这些数据更新你的view model（不使用mapping插件），代码如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Every time data is received from the server:</span><span style="color: #008000;"><br></span>viewModel.serverTime(data.serverTime);<br>viewModel.numUsers(data.numUsers);</pre>
</div>
<p>为了使数据显示在页面上，所有的属性都要像这样写代码。如果你的数据结构很复杂的话（例如，包含子对象或者数组），那就维护起来就相当痛苦。mapping插件就是来让你让你的JavaScript简单对象（或JSON结构）转换成observable的view model的。</p>
<p>&nbsp;</p>
<p><strong>例子：使用ko.mapping</strong></p>
<p>通过mapping插件创建view model，直接使用ko.mapping.fromJS函数来创建：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> viewModel = ko.mapping.fromJS(data);</pre>
</div>
<p>它会自动将data里所有的属性创建成observable类型的属性。你可以通过ko.mapping.fromJS 函数定期从服务器获取数据，然后更新你的view model：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Every time data is received from the server:</span><span style="color: #008000;"><br></span>ko.mapping.fromJS(data, viewModel);</pre>
</div>
<p>&nbsp;</p>
<p><strong>如何mapping？</strong></p>
<p>&nbsp;&nbsp;&nbsp; 对象的所有属性都被转换成observable类型值，如果获取的对象的值改变了，就会更新这个observable类型的值.</p>
<p>&nbsp;&nbsp;&nbsp; 数组也被转换成了observable数组，如果服务器更新改变了数组的个数，mapping插件也会添加或者删除相应的item项，也会尽量保持和原生JavaScript数组相同的order顺序。</p>
<p>&nbsp;</p>
<p><strong>Unmapping</strong></p>
<p>如果你想让map过的对象转换成原来的JavaScript对象，使用如下方式：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> unmapped = ko.mapping.toJS(viewModel);</pre>
</div>
<p>会创建一个unmapped对象，只包含你之前map过的对象属性，换句话说，你在view model上手工添加的属性或者函数都会被忽略的，唯一例外的是_destroy属性是可以unmapped回来的，因为你从ko.observableArray里destroy一个item项的时候会生成这个属性。 请参考“高级用户”小节如何配置使用。</p>
<p>&nbsp;</p>
<p><strong>与JSON字符串一起使用</strong></p>
<p>如果你的Ajax调用返回的是JSON字符串（而不是反序列化后的JavaScript对象），你可以使用ko.mapping.fromJSON函数来创建或者更新你的view model。用ko.mapping.toJSON实现unmap。</p>
<p>使用.from/toJSON函数处理JSON字符串和使用.from/toJS函数处理JS对象是等价的。</p>
<p>&nbsp;</p>
<p><strong>高级用法</strong></p>
<p>有时候，在使用ko.mapping.fromJS的时候，可能有必要去使用mapping的高级用法来定义mapping的详细过程，以后定义了，以后再调用的时候就不必再定义了。这里有一些情形，你可能需要使用这些option。</p>
<p>&nbsp;</p>
<p><strong>用法1：使用keys来使对象unique化</strong></p>
<p>你有一个JavaScript对象，如下：</p>
<div class="cnblogs_code"><div class="cnblogs_code_toolbar" style="display: none; "><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/copycode.gif" alt="复制代码"></a></span></div>
<pre><span style="color: #0000ff;">var</span> data = {<br>    name: 'Scot',<br>    children: [<br>        { id: 1, name: 'Alicw' }<br>    ]<br>}</pre>
<div class="cnblogs_code_toolbar" style="display: none; "><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/copycode.gif" alt="复制代码"></a></span></div></div>
<p>使用map插件，你可以将它map到view model上（没任何问题）：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> viewModel = ko.mapping.fromJS(data);</pre>
</div>
<p>现在，数据被更新成如下这样：</p>
<div class="cnblogs_code"><div class="cnblogs_code_toolbar" style="display: none; "><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/copycode.gif" alt="复制代码"></a></span></div>
<pre><span style="color: #0000ff;">var</span> data = {<br>    name: 'Scott',<br>    children: [<br>        { id: 1, name: 'Alice' }<br>    ]<br>}</pre>
<div class="cnblogs_code_toolbar" style="display: none; "><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/copycode.gif" alt="复制代码"></a></span></div></div>
<p>这里发生了两件事：name从Scot变成了Scott，children[0].name从Alicw变成了Alice。你可以用如下代码更新view model：</p>
<div class="cnblogs_code">
<pre>ko.mapping.fromJS(data, viewModel);</pre>
</div>
<p>于是，name像我们期望的一样更新了，但是在children数组里，子项Alicw被删除而新项Alice被添加到数组里。这不是我们所期望的，我们期望的是只是把name从Alicw更新成Alice，不是替换整个item项。发生的原因是，默认情况下mapping plugin插件只是简单地比较数组里的两个对象是否相等。 因为JavaScript里<span style="color: #ff6600;">{ id : 1, name : 'Alicw' }</span>和<span style="color: #ff6600;">{ id : 1, name : 'Alice' }</span>是不相等的，所以它认为喜欢将新项替换掉老项。</p>
<p>解决这个问题，你需要声明一个key让mapping插件使用，用来判断一个对象是新对象还是旧对象。代码如下：</p>
<div class="cnblogs_code"><div class="cnblogs_code_toolbar" style="display: none; "><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/copycode.gif" alt="复制代码"></a></span></div>
<pre><span style="color: #0000ff;">var</span> mapping = {<br>    'children': {<br>        key: <span style="color: #0000ff;">function</span> (data) {<br>            <span style="color: #0000ff;">return</span> ko.utils.unwrapObservable(data.id);<br>        }<br>    }<br>}<br><br><span style="color: #0000ff;">var</span> viewModel = ko.mapping.fromJS(data, mapping);</pre>
<div class="cnblogs_code_toolbar" style="display: none; "><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/copycode.gif" alt="复制代码"></a></span></div></div>
<p>这样，每次map的时候，mapping插件都会检查数组项的id属性来判断这个数组项是需要合并的还是全新replace的。</p>
<p>&nbsp;</p>
<p><strong>用法2：用create自定义对象的构造器</strong></p>
<p>如果你想自己控制mapping，你也可以使用create回调。使用回调可以让你自己控制mapping。</p>
<p>举例，你有一个像这样的JavaScript对象：</p>
<div class="cnblogs_code"><div class="cnblogs_code_toolbar" style="display: none; "><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/copycode.gif" alt="复制代码"></a></span></div>
<pre><span style="color: #0000ff;">var</span> data = {<br>    name: 'Graham',<br>    children: [<br>        { id: 1, name: 'Lisa' }<br>    ]<br>}</pre>
<div class="cnblogs_code_toolbar" style="display: none; "><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/copycode.gif" alt="复制代码"></a></span></div></div>
<p>如果你想自己map children 数组，你可以这样声明：</p>
<div class="cnblogs_code"><div class="cnblogs_code_toolbar" style="display: none; "><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/copycode.gif" alt="复制代码"></a></span></div>
<pre><span style="color: #0000ff;">var</span> mapping = {<br>    'children': {<br>        create: <span style="color: #0000ff;">function</span> (options) {<br>            <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">new</span> myChildModel(options.data);<br>        }<br>    }<br>}<br><br><span style="color: #0000ff;">var</span> viewModel = ko.mapping.fromJS(data, mapping);</pre>
<div class="cnblogs_code_toolbar" style="display: none; "><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/copycode.gif" alt="复制代码"></a></span></div></div>
<p>支持create回调的options参数是一个JavaScript对象，包含如下：</p>
<ul>
<li><span style="color: #ff6600;">data</span>： JavaScript对象，包含child用到的数据</li>
<li><span style="color: #ff6600;">parent</span>：child对象所属的父对象或者数组</li>
</ul>
<p>&nbsp;当然，在内部的create回调里，你也可以再次调用ko.mapping.fromJS。一个例子就是：如果你想让初始的JavaScript对象带有额外的依赖属性dependent observables：</p>
<div class="cnblogs_code"><div class="cnblogs_code_toolbar" style="display: none; "><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/copycode.gif" alt="复制代码"></a></span></div>
<pre><span style="color: #0000ff;">var</span> myChildModel = <span style="color: #0000ff;">function</span> (data) {<br>    ko.mapping.fromJS(data, {}, <span style="color: #0000ff;">this</span>); <br><br>    <span style="color: #0000ff;">this</span>.nameLength = ko.dependentObservable(<span style="color: #0000ff;">function</span> () {<br>        <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">this</span>.name().length;<br>    }, <span style="color: #0000ff;">this</span>);<br>}</pre>
<div class="cnblogs_code_toolbar" style="display: none; "><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/copycode.gif" alt="复制代码"></a></span></div></div>
<p>&nbsp;</p>
<p><strong>用法3：用update自定义对象的updating</strong></p>
<p>你也可以使用update 回调来自定义一个对象如何更新。它接受一个需要替代的对象以及和create 回调一样的options参数，你应该return更新后的值。</p>
<p>update 回调使用的options参数是一个JavaScript对象，包含如下内容：</p>
<ul>
<li><span style="color: #ff6600;">data</span>：JavaScript对象，包含child用到的数据</li>
<li><span style="color: #ff6600;">parent</span>：child对象所属的父对象或者数组</li>
<li><span style="color: #ff6600;">observable</span>：如果属性是observable的，这将会写入到实际的observable里</li>
</ul>
<p>&nbsp;例子，在数据显示之前，在新数据后面附加额外的字符串：</p>
<div class="cnblogs_code"><div class="cnblogs_code_toolbar" style="display: none; "><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/copycode.gif" alt="复制代码"></a></span></div>
<pre><span style="color: #0000ff;">var</span> data = {<br>    name: 'Graham',<br>} <br><br><span style="color: #0000ff;">var</span> mapping = {<br>    'name': {<br>        update: <span style="color: #0000ff;">function</span>(options) {<br>            <span style="color: #0000ff;">return</span> options.data + 'foo!';<br>        }<br>    }<br>}<br><br><span style="color: #0000ff;">var</span> viewModel = ko.mapping.fromJS(data, mapping);<br>alert(viewModel.name());</pre>
<div class="cnblogs_code_toolbar" style="display: none; "><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/copycode.gif" alt="复制代码"></a></span></div></div>
<p>alert的结果是：Grahamfoo!。</p>
<p>&nbsp;</p>
<p><strong>用法4：使用ignore忽略不需要map的属性</strong></p>
<p>如果在map的时候，你想忽略一些属性，你可以使用ignore累声明需要忽略的属性名称集合：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> mapping = {<br>    'ignore': ["propertyToIgnore", "alsoIgnoreThis"]<br>}<br><br><span style="color: #0000ff;">var</span> viewModel = ko.mapping.fromJS(data, mapping);</pre>
</div>
<p>你声明的忽略数组被编译到默认的ignore数组里。你可以像下面代码一样来维护它：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> oldOptions = ko.mapping.defaultOptions().ignore;<br>ko.mapping.defaultOptions().ignore = ["alwaysIgnoreThis"];</pre>
</div>
<p>&nbsp;</p>
<p><strong>用法5：使用include声明需要map的属性</strong></p>
<p>默认情况下，当map你的view model回到JS对象是时候，只map原始view model里拥有的属性（除了例外的_destroy属性），不过，你可以使用include参数来定制：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> mapping = {<br>    'include': ["propertyToInclude", "alsoIncludeThis"]<br>}<br><br><span style="color: #0000ff;">var</span> viewModel = ko.mapping.fromJS(data, mapping);</pre>
</div>
<p>你声明的include数组被编译到默认的include数组里，默认只有_destroy。 你可以像这样来维护：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> oldOptions = ko.mapping.defaultOptions().include;<br>ko.mapping.defaultOptions().include = ["alwaysIncludeThis"];</pre>
</div>
<p>&nbsp;</p>
<p><strong>用法6：使用copy来复制属性</strong></p>
<p>默认情况下，map的时候是把所有的值都转换成observable的，如果你只是想copy属性值而不是替换成observable的，你可以将属性名称添加到copy数组：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> mapping = {<br>    'copy': ["propertyToCopy"]<br>}<br><br><span style="color: #0000ff;">var</span> viewModel = ko.mapping.fromJS(data, mapping);</pre>
</div>
<p>你声明的copy数组被编译到默认的copy数组里，默认值是空。你可以像这样来维护：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> oldOptions = ko.mapping.defaultOptions().copy;<br>ko.mapping.defaultOptions().copy = ["alwaysCopyThis"];</pre>
</div>
<p>&nbsp;</p>
<p><strong>用法7：Specifying the update target</strong></p>
<p>在上面的例子，如果你想再一个class内map，你可以使用第三个参数作为操作的目标，例如：</p>
<div class="cnblogs_code">
<pre>ko.mapping.fromJS(data, {}, someObject); <span style="color: #008000;">//</span><span style="color: #008000;"> overwrites properties on someObject</span></pre>
</div>
<p>所以，如果你想map一个JavaScript对象到this上，你可以这样声明：</p>
<div class="cnblogs_code">
<pre>ko.mapping.fromJS(data, {}, <span style="color: #0000ff;">this</span>);</pre>
</div>
<p>&nbsp;</p>
<p><strong>从多数据源map</strong></p>
<p>你可以通过多次使用ko.mapping.fromJS 来将多个JS对象的数据源map到一起，例如：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> viewModel = ko.mapping.fromJS(alice, aliceMappingOptions);<br>ko.mapping.fromJS(bob, bobMappingOptions, viewModel);</pre>
</div>
<p>你声明的mapping选项option在每次调用的时候都会合并。</p>
<p>&nbsp;</p>
<p><strong>Map</strong><strong>以后的observable数组</strong></p>
<p>map插件map以后生产的observable数组，带有几个额外的函数来处理带有keys的mapping：</p>
<ul>
<li>mappedRemove</li>
<li>mappedRemoveAll</li>
<li>mappedDestroy</li>
<li>mappedDestroyAll</li>
<li>mappedIndexOf</li>
</ul>
<p>&nbsp;它们是和ko.observableArray里的函数等价的，不同是他们通过key来处理对象。例如：</p>
<div class="cnblogs_code"><div class="cnblogs_code_toolbar" style="display: none; "><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/copycode.gif" alt="复制代码"></a></span></div>
<pre><span style="color: #0000ff;">var</span> obj = [<br>    { id: 1 },<br>    { id: 2 }<br>]<br><br><span style="color: #0000ff;">var</span> result = ko.mapping.fromJS(obj, {<br>    key: <span style="color: #0000ff;">function</span> (item) {<br>        <span style="color: #0000ff;">return</span> ko.utils.unwrapObservable(item.id);<br>    }<br>});<br><br>result.mappedRemove({ id: 2 });</pre>
<div class="cnblogs_code_toolbar" style="display: none; "><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/copycode.gif" alt="复制代码"></a></span></div></div>
<p>map过的observable数组，除了上面的函数还支持一个mappedCreate函数：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> newItem = result.mappedCreate({ id: 3 });</pre>
</div>
<p>首先会检查key（id=3）在数组里是否存在（如果存在则抛出异常），然后，如果有create和 update回调的话会调用他们，最后创建一个新对象，并将新对象添加到数组然后返回该新对象。</p>
<p>&nbsp;</p>
<p><strong>下载</strong></p>
<p>&nbsp;&nbsp;&nbsp; <a href="https://github.com/SteveSanderson/knockout.mapping/tree/master/build/output" target="_blank">Version 2.0</a> （最小版本8.6kb）</p></div><div id="MySignature"></div>
        
<div class="clear"></div>
<div id="blog_post_info_block">
<div id="blog_post_info"><div id="BlogPostCategory">分类: <a href="http://www.cnblogs.com/TomXu/category/336771.html">[08]Knockout</a></div>
<div id="EntryTag">标签: <a href="http://www.cnblogs.com/TomXu/tag/Knockout/">Knockout</a>, <a href="http://www.cnblogs.com/TomXu/tag/asp.net%20MVC/">asp.net MVC</a>, <a href="http://www.cnblogs.com/TomXu/tag/JavaScript/">JavaScript</a>, <a href="http://www.cnblogs.com/TomXu/tag/MVVM/">MVVM</a>, <a href="http://www.cnblogs.com/TomXu/tag/ViewModel/">ViewModel</a>, <a href="http://www.cnblogs.com/TomXu/tag/jQuery/">jQuery</a></div>
<div id="green_channel">
绿色通道：
<a href="javascript:void(0);" id="green_channel_digg" onclick="DiggIt(cb_entryId,cb_blogId,1);green_channel_success(this,&#39;谢谢推荐！&#39;);">好文要顶</a>
<a id="green_channel_follow" onclick="c_follow();" href="javascript:void(0);">关注我</a>
<a id="green_channel_favorite" onclick="AddToWz(cb_entryId);return false;" href="javascript:void(0);">收藏该文</a><a id="green_channel_contact" href="http://space.cnblogs.com/msg/send/%e6%b1%a4%e5%a7%86%e5%a4%a7%e5%8f%94" target="_blank">与我联系</a>
<a id="green_channel_weibo" href="javascript:void(0);" title="分享至新浪微博" onclick="ShareToTsina()"><img src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/icon_weibo_24.png" alt=""></a>
</div>
<div id="author_profile">
<div id="author_profile_info" class="author_profile_info">
<a href="http://home.cnblogs.com/u/TomXu/" target="_blank"><img src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/u349491.jpg" class="author_avatar" alt=""></a>
<div id="author_profile_detail" class="author_profile_info">
<a href="http://home.cnblogs.com/u/TomXu/">汤姆大叔</a><br>
<a href="http://home.cnblogs.com/u/TomXu/followees">关注 - 19</a><br>
<a href="http://home.cnblogs.com/u/TomXu/followers">粉丝 - 4759</a>
</div>
</div>
<div class="clear"></div>
<div id="author_profile_honor">荣誉：<a href="http://www.cnblogs.com/expert/" target="_blank">推荐博客</a></div>
<div id="author_profile_follow">
    <a href="javascript:void(0);" onclick="c_follow();return false;">+加关注</a>
</div>
</div>
<div id="div_digg">										
	<div class="diggit" onclick="votePost(cb_entryId,&#39;Digg&#39;)"> 
		<span class="diggnum" id="digg_count">12</span>
	</div>
	<div class="buryit" onclick="votePost(cb_entryId,&#39;Bury&#39;)"> 
		<span class="burynum" id="bury_count">0</span>
	</div>
	<div class="clear"></div>	
	<div class="diggword" id="digg_tips">
    (请您对文章做出评价)
    </div>	
</div>
</div>
<div class="clear"></div>
<div id="post_next_prev"><a href="http://www.cnblogs.com/TomXu/archive/2011/11/28/2263111.html" class="p_n_p_prefix">« </a> 上一篇：<a href="http://www.cnblogs.com/TomXu/archive/2011/11/28/2263111.html" title="发布于2011-11-28 12:29">微软ASP.NET站点部署指南（6）：设置文件夹权限</a><br><a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2263132.html" class="p_n_p_prefix">» </a> 下一篇：<a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2263132.html" title="发布于2011-11-29 13:38">微软ASP.NET站点部署指南（7）：生产环境部署</a><br></div>
</div>


    </div>    
    <ul class="postmetadata">
        <li id="ctl01_liCate" class="icon_cat"><strong>Categories: </strong>
            <a href="http://www.cnblogs.com/TomXu/category/336771.html">[08]Knockout</a>            
        </li>
        <li id="ctl01_liTag" class="icon_bullet"><strong>Tags: </strong>
            <a href="http://www.cnblogs.com/TomXu/tag/Knockout/">Knockout</a>, <a href="http://www.cnblogs.com/TomXu/tag/asp.net+MVC/">asp.net MVC</a>, <a href="http://www.cnblogs.com/TomXu/tag/JavaScript/">JavaScript</a>, <a href="http://www.cnblogs.com/TomXu/tag/MVVM/">MVVM</a>, <a href="http://www.cnblogs.com/TomXu/tag/ViewModel/">ViewModel</a>, <a href="http://www.cnblogs.com/TomXu/tag/jQuery/">jQuery</a>
        </li>        
    </ul>
</div>
<script type="text/javascript">var allowComments=true,isLogined=false,cb_blogId=101461,cb_entryId=2257054,cb_blogApp=currentBlogApp,cb_blogUserGuid='65b02d3c-5b0b-e111-b7b9-842b2b196315',cb_entryCreatedDate='2011/11/29 9:08:00';loadViewCount(cb_entryId);</script>
<script type="text/javascript">
    var m = window.__blog.postRendered;
    if (m) { m(__$("post")); }
</script>

<script type="text/javascript">
    var m = window.__blog.postRenderPosts;
    if (m) { m(); }
</script><a name="!comments"></a><div id="blog-comments-placeholder"><div id="comments_pager_top"></div>
<a class="addcomment" href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#comment_tip">Add your comment</a>
<h3 id="comments"></h3>
<div class="feedbackNoItems"></div>


<ol class="commentlist" id="commentList">	

		<li class="alt">
			<h5>
				<cite><a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#2256065" class="layer">#1楼</a><a name="2256065" id="comment_anchor_2256065"></a></cite> <a id="a_comment_author_2256065" href="http://www.cnblogs.com/gaotang/" target="_blank">高堂</a> <a href="http://space.cnblogs.com/msg/send/%e9%ab%98%e5%a0%82" title="发送站内短消息" class="sendMsg2This">&nbsp;</a><small> <span class="comment_date">2011-11-29 09:52</span></small>
			</h5>
			<div id="comment_body_2256065" class="blog_comment_body">楼主你好！<br>    像"data-bind='text: serverTime'",好像不能多个属性绑定~像同时绑定text,css,click事件这样。<br>    还有那个jquery.tmpl与ko.observableArray数组绑定，能不能给个详细的例子啊~多谢~</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2256065,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2256065,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_2256065_avatar" style="display:none;">http://pic.cnitblog.com/face/u37156.jpg</span>
			<div class="opt_comment"><span class="comment_actions"></span></div>
		</li>
	
		<li class="alt">
			<h5>
				<cite><a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#2256325" class="layer">#2楼</a><a name="2256325" id="comment_anchor_2256325"></a>[<span class="louzhu">楼主</span>]</cite> <a id="a_comment_author_2256325" href="http://www.cnblogs.com/TomXu/" target="_blank">汤姆大叔</a> <a href="http://space.cnblogs.com/msg/send/%e6%b1%a4%e5%a7%86%e5%a4%a7%e5%8f%94" title="发送站内短消息" class="sendMsg2This">&nbsp;</a><small> <span class="comment_date">2011-11-29 13:35</span></small>
			</h5>
			<div id="comment_body_2256325" class="blog_comment_body"><fieldset class="comment_quote"><legend><a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#2256065" title="查看引用原文">引用</a></legend>高堂：<br>楼主你好！<br>    像"data-bind='text: serverTime'",好像不能多个属性绑定~像同时绑定text,css,click事件这样。<br>    还有那个jquery.tmpl与ko.observableArray数组绑定，能不能给个详细的例子啊~多谢~</fieldset><br><br>是可以的，但是需要注意多个属性绑定的话，需要空格，例如：<br>data-bind='text: serverTime, css:{'',1=1}'<br>serverTime和css之间除了逗号以外，还要有空格。</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2256325,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2256325,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_2256325_avatar" style="display:none;">http://pic.cnitblog.com/face/u349491.jpg?id=02230504</span>
			<div class="opt_comment"><span class="comment_actions"></span></div>
		</li>
	
		<li class="alt">
			<h5>
				<cite><a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#2257192" class="layer">#3楼</a><a name="2257192" id="comment_anchor_2257192"></a></cite> <a id="a_comment_author_2257192" href="http://www.cnblogs.com/lucker/" target="_blank">十二月的雪</a> <a href="http://space.cnblogs.com/msg/send/%e5%8d%81%e4%ba%8c%e6%9c%88%e7%9a%84%e9%9b%aa" title="发送站内短消息" class="sendMsg2This">&nbsp;</a><small> <span class="comment_date">2011-11-30 10:59</span></small>
			</h5>
			<div id="comment_body_2257192" class="blog_comment_body">又见汤姆大叔霸气头像. 果断进来留名</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2257192,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2257192,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_2257192_avatar" style="display:none;">http://pic.cnitblog.com/face/u39127.jpg</span>
			<div class="opt_comment"><span class="comment_actions"></span></div>
		</li>
	
		<li class="alt">
			<h5>
				<cite><a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#2311125" class="layer">#4楼</a><a name="2311125" id="comment_anchor_2311125"></a></cite> <a id="a_comment_author_2311125" href="http://www.cnblogs.com/Skyzi/" target="_blank">Skyzi</a> <a href="http://space.cnblogs.com/msg/send/Skyzi" title="发送站内短消息" class="sendMsg2This">&nbsp;</a><small> <span class="comment_date">2012-02-17 16:58</span></small>
			</h5>
			<div id="comment_body_2311125" class="blog_comment_body">呵呵。这么多知识点，能结合一下应用场景就很nb了</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2311125,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2311125,&#39;Bury&#39;,this)">反对(0)</a></div>
			<div class="opt_comment"><span class="comment_actions"></span></div>
		</li>
	
		<li class="alt">
			<h5>
				<cite><a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#2353325" class="layer">#5楼</a><a name="2353325" id="comment_anchor_2353325"></a></cite> <a id="a_comment_author_2353325" href="http://www.cnblogs.com/KratosZhang/" target="_blank">Kratos Zhang</a> <a href="http://space.cnblogs.com/msg/send/Kratos+Zhang" title="发送站内短消息" class="sendMsg2This">&nbsp;</a><small> <span class="comment_date">2012-04-12 13:06</span></small>
			</h5>
			<div id="comment_body_2353325" class="blog_comment_body">关于mapping插件 create、update等的用法，能不能给出一个简单示例？<br>卡在这里了。。</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2353325,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2353325,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_2353325_avatar" style="display:none;">http://pic.cnitblog.com/face/326667/20131227194551.png</span>
			<div class="opt_comment"><span class="comment_actions"></span></div>
		</li>
	
		<li class="alt">
			<h5>
				<cite><a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#2445389" class="layer">#6楼</a><a name="2445389" id="comment_anchor_2445389"></a></cite> <a id="a_comment_author_2445389" href="http://www.cnblogs.com/rxnh8255/" target="_blank">血血</a> <a href="http://space.cnblogs.com/msg/send/%e8%a1%80%e8%a1%80" title="发送站内短消息" class="sendMsg2This">&nbsp;</a><small> <span class="comment_date">2012-08-09 16:27</span></small>
			</h5>
			<div id="comment_body_2445389" class="blog_comment_body">大叔...mapping数组的时候.我要取数组里面的值怎么写啊.怎么监控数组里面的对象修改呢,</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2445389,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2445389,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_2445389_avatar" style="display:none;">http://pic.cnitblog.com/face/u43082.jpg</span>
			<div class="opt_comment"><span class="comment_actions"></span></div>
		</li>
	
		<li class="alt">
			<h5>
				<cite><a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#2445943" class="layer">#7楼</a><a name="2445943" id="comment_anchor_2445943"></a></cite> <a id="a_comment_author_2445943" href="http://www.cnblogs.com/rxnh8255/" target="_blank">血血</a> <a href="http://space.cnblogs.com/msg/send/%e8%a1%80%e8%a1%80" title="发送站内短消息" class="sendMsg2This">&nbsp;</a><small> <span class="comment_date">2012-08-10 11:53</span></small>
			</h5>
			<div id="comment_body_2445943" class="blog_comment_body">不用mapping数组的里面的值改变的时候怎么显示到页面上呢?感觉没有效果一样.<br><div><div id="highlighter_580173" class="syntaxhighlighter  javascript"><div class="toolbar"><span><a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript keyword">var</code> <code class="javascript plain">viewModel = {</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">unitList: </code><code class="javascript keyword">new</code> <code class="javascript plain">ko.observableArray(),</code></div><div class="line number4 index3 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number5 index4 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">contacts: </code><code class="javascript keyword">new</code> <code class="javascript plain">ko.observableArray(),</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">addContact: </code><code class="javascript keyword">function</code> <code class="javascript plain">() {</code></div><div class="line number8 index7 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">viewModel.contacts.push({ P_GuiGe: </code><code class="javascript string">""</code><code class="javascript plain">, P_MuLu: </code><code class="javascript string">""</code><code class="javascript plain">, P_Name: </code><code class="javascript string">""</code><code class="javascript plain">, P_Number: </code><code class="javascript string">""</code><code class="javascript plain">, P_Price: </code><code class="javascript string">""</code><code class="javascript plain">, P_Unit: 0 });</code></div><div class="line number9 index8 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">},</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">removeContact: </code><code class="javascript keyword">function</code> <code class="javascript plain">(contact) {</code></div><div class="line number12 index11 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">viewModel.contacts.remove(contact);</code></div><div class="line number13 index12 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">},</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">choseContact : ko.observable(),</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">openMulu: </code><code class="javascript keyword">function</code> <code class="javascript plain">(conta) {</code></div><div class="line number18 index17 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number19 index18 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">this</code><code class="javascript plain">.choseContact(conta);</code></div><div class="line number20 index19 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">$.blockUI({ message: $(</code><code class="javascript string">'#divMask'</code><code class="javascript plain">),css:{cursor:</code><code class="javascript string">'default'</code><code class="javascript plain">}});</code></div><div class="line number21 index20 alt2">&nbsp;</div><div class="line number22 index21 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">},</code></div><div class="line number23 index22 alt2">&nbsp;</div><div class="line number24 index23 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">ConfirmUI: </code><code class="javascript keyword">function</code><code class="javascript plain">(){</code></div><div class="line number25 index24 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">console.log(</code><code class="javascript keyword">this</code><code class="javascript plain">.choseContact());</code></div><div class="line number26 index25 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">this</code><code class="javascript plain">.choseContact().P_MuLu = </code><code class="javascript string">'选择的项'</code><code class="javascript plain">;</code></div><div class="line number27 index26 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript comments">//$("#mulu"+selectindex).val(this.contacts()[selectindex].P_MuLu);</code></div><div class="line number28 index27 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">$.unblockUI();</code></div><div class="line number29 index28 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">},</code></div><div class="line number30 index29 alt1">&nbsp;</div><div class="line number31 index30 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">save: </code><code class="javascript keyword">function</code> <code class="javascript plain">() {</code></div><div class="line number32 index31 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">viewModel.lastSavedJson(JSON.stringify(viewModel.contacts(), </code><code class="javascript keyword">null</code><code class="javascript plain">, 2));</code></div><div class="line number33 index32 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">},</code></div><div class="line number34 index33 alt1">&nbsp;</div><div class="line number35 index34 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">lastSavedJson: </code><code class="javascript keyword">new</code> <code class="javascript plain">ko.observable(</code><code class="javascript string">""</code><code class="javascript plain">)</code></div><div class="line number36 index35 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">};</code></div></div></td></tr></tbody></table></div></div><br><br>P_MuLu改变了这个没有显示到HTML上,添加和删除数组是可以的.</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2445943,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2445943,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_2445943_avatar" style="display:none;">http://pic.cnitblog.com/face/u43082.jpg</span>
			<div class="opt_comment"><span class="comment_actions"></span></div>
		</li>
	
		<li class="alt">
			<h5>
				<cite><a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#2445946" class="layer">#8楼</a><a name="2445946" id="comment_anchor_2445946"></a></cite> <a id="a_comment_author_2445946" href="http://www.cnblogs.com/rxnh8255/" target="_blank">血血</a> <a href="http://space.cnblogs.com/msg/send/%e8%a1%80%e8%a1%80" title="发送站内短消息" class="sendMsg2This">&nbsp;</a><small> <span class="comment_date">2012-08-10 11:58</span></small>
			</h5>
			<div id="comment_body_2445946" class="blog_comment_body">KO能手动提交更新页面么....我好多问题啊..大叔....</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2445946,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2445946,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_2445946_avatar" style="display:none;">http://pic.cnitblog.com/face/u43082.jpg</span>
			<div class="opt_comment"><span class="comment_actions"></span></div>
		</li>
	
		<li class="alt">
			<h5>
				<cite><a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#2445970" class="layer">#9楼</a><a name="2445970" id="comment_anchor_2445970"></a></cite> <a id="a_comment_author_2445970" href="http://www.cnblogs.com/rxnh8255/" target="_blank">血血</a> <a href="http://space.cnblogs.com/msg/send/%e8%a1%80%e8%a1%80" title="发送站内短消息" class="sendMsg2This">&nbsp;</a><small> <span class="comment_date">2012-08-10 12:29</span></small>
			</h5>
			<div id="comment_body_2445970" class="blog_comment_body">大叔...搞定了...谢谢大叔..是我自己理解有问题.</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2445970,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2445970,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_2445970_avatar" style="display:none;">http://pic.cnitblog.com/face/u43082.jpg</span>
			<div class="opt_comment"><span class="comment_actions"></span></div>
		</li>
	
		<li class="alt">
			<h5>
				<cite><a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#2628166" class="layer">#10楼</a><a name="2628166" id="comment_anchor_2628166"></a></cite> <a id="a_comment_author_2628166" href="http://www.cnblogs.com/beijingbh/" target="_blank">Michael  Bo</a> <a href="http://space.cnblogs.com/msg/send/Michael++Bo" title="发送站内短消息" class="sendMsg2This">&nbsp;</a><small> <span class="comment_date">2013-03-05 16:11</span></small>
			</h5>
			<div id="comment_body_2628166" class="blog_comment_body">大叔 搞个QQ群吧  好多问题，主要是官方实例 和一些网上的实例 都是基础简单的，结合复杂的业务逻辑就.....完全凌乱</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2628166,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2628166,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_2628166_avatar" style="display:none;">http://pic.cnitblog.com/face/u413602.jpg?id=30203437</span>
			<div class="opt_comment"><span class="comment_actions"></span></div>
		</li>
	
		<li class="alt">
			<h5>
				<cite><a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#2661413" class="layer">#11楼</a><a name="2661413" id="comment_anchor_2661413"></a></cite> <a id="a_comment_author_2661413" href="http://home.cnblogs.com/u/73621/" target="_blank">天空色</a> <a href="http://space.cnblogs.com/msg/send/%e5%a4%a9%e7%a9%ba%e8%89%b2" title="发送站内短消息" class="sendMsg2This">&nbsp;</a><small> <span class="comment_date">2013-04-19 11:01</span></small>
			</h5>
			<div id="comment_body_2661413" class="blog_comment_body">郁闷啊，不知道是不是版本更新的关系，我从服务器获得js对象后无法重新更新原有的viewModel，ko.mapping.fromJS(data, viewModel);完全无效！！</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2661413,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2661413,&#39;Bury&#39;,this)">反对(0)</a></div>
			<div class="opt_comment"><span class="comment_actions"></span></div>
		</li>
	
		<li class="alt">
			<h5>
				<cite><a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#2743927" class="layer">#12楼</a><a name="2743927" id="comment_anchor_2743927"></a><span id="comment-maxId" style="display:none;">2743927</span><span id="comment-maxDate" style="display:none;">2013/8/5 22:33:54</span></cite> <a id="a_comment_author_2743927" href="http://www.cnblogs.com/sintao/" target="_blank">flybbjcs70</a> <a href="http://space.cnblogs.com/msg/send/flybbjcs70" title="发送站内短消息" class="sendMsg2This">&nbsp;</a><small> <span class="comment_date">2013-08-05 22:33</span></small>
			</h5>
			<div id="comment_body_2743927" class="blog_comment_body"><a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#2661413" title="查看所回复的评论" onclick="commentManager.renderComments(0,50,2661413);">@</a>天空色<br>var obj=GetObj();<br>var viewModel=ko.mapping.fromJS(obj);<br>ko.applyBindings(viewModel);<br> ko.mapping.fromJS(data,viewModel);</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2743927,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2743927,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_2743927_avatar" style="display:none;">http://pic.cnitblog.com/face/292769/20140113163011.png</span>
			<div class="opt_comment"><span class="comment_actions"></span></div>
		</li>
	
</ol>

<div id="comments_pager_bottom"></div></div><script type="text/javascript">var commentManager = new blogCommentManager();commentManager.renderComments(0);</script>
<div id="comment_form" class="commentform">
<a name="commentform"></a>
<div id="divCommentShow"></div>
<div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" id="lnk_RefreshComments" onclick="return RefreshCommentList();">刷新评论</a><a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#" onclick="return RefreshPage();">刷新页面</a><a href="http://www.cnblogs.com/TomXu/archive/2011/11/29/2257054.html#top">返回顶部</a></div>
<div id="comment_form_container"><div class="login_tips">注册用户登录后才能发表评论，请 <a rel="nofollow" href="javascript:void(0);" class="underline" onclick="return login(&#39;commentform&#39;);">登录</a> 或 <a rel="nofollow" href="javascript:void(0);" class="underline" onclick="return register();">注册</a>，<a href="http://www.cnblogs.com/">访问</a>网站首页。</div></div>
<div class="ad_text_commentbox" id="ad_text_under_commentbox"><a href="http://www.cnblogs.com/cmt/p/3577868.html" target="_blank">游戏开发者报名得阿里云代金券，更有千元大奖等你拿</a></div>
<div id="site_nav_under"><a href="http://www.cnblogs.com/" target="_blank" title="程序员的网上家园">博客园首页</a><a href="http://q.cnblogs.com/" target="_blank" title="程序员问答社区">博问</a><a href="http://news.cnblogs.com/" target="_blank" title="IT新闻">新闻</a><a href="http://home.cnblogs.com/ing/" target="_blank">闪存</a><a href="http://job.cnblogs.com/" target="_blank">程序员招聘</a><a href="http://kb.cnblogs.com/" target="_blank">知识库</a></div>
<div id="ad_under_post_holder">

<div id="google_ad_c1" class="c_ad_block">
    <!-- cnblogs_blogpost_C1_sitehome -->
    <div id="div-gpt-ad-1346480159711-0" style="width: 300px; height: 250px; ">
    
    <div id="google_ads_iframe_/1090369/cnblogs_blogpost_C1_sitehome_0__container__" style="border: 0pt none; "><iframe id="google_ads_iframe_/1090369/cnblogs_blogpost_C1_sitehome_0" name="google_ads_iframe_/1090369/cnblogs_blogpost_C1_sitehome_0" width="300" height="250" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" style="border: 0px; vertical-align: bottom; " src="javascript:"<html><body style='background:transparent'></body></html>""></iframe></div><iframe id="google_ads_iframe_/1090369/cnblogs_blogpost_C1_sitehome_0__hidden__" name="google_ads_iframe_/1090369/cnblogs_blogpost_C1_sitehome_0__hidden__" width="0" height="0" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" style="border: 0px; vertical-align: bottom; visibility: hidden; display: none; " src="javascript:"<html><body style='background:transparent'></body></html>""></iframe></div>
</div>
<div id="blog_news_kb"><div class="itnews c_ad_block"><b>最新IT新闻</b>:<br> ·  <a href="http://news.cnblogs.com/n/201932/" target="_blank">腾讯手游想疯狂变现 却遭遇360狙击</a><br> ·  <a href="http://news.cnblogs.com/n/201931/" target="_blank">迅雷推“红雷盒子”机顶盒：3月28日发售 售399元</a><br> ·  <a href="http://news.cnblogs.com/n/201930/" target="_blank">全球最大飞行器竟是美军间谍工具</a><br> ·  <a href="http://news.cnblogs.com/n/201929/" target="_blank">中国人民银行行长周小川：绝不取缔余额宝</a><br> ·  <a href="http://news.cnblogs.com/n/201928/" target="_blank">神PS！奥斯卡影星与年轻时自己的合影</a><br>» <a href="http://news.cnblogs.com/" title="IT新闻" target="_blank">更多新闻...</a></div><div class="itnews c_ad_block" id="kb_block"><b>最新知识库文章</b>:<br><div id="kb_recent"> ·  <a href="http://kb.cnblogs.com/page/191521/" target="_blank">指尖上的浏览：如何理解用户的眼？</a><br> ·  <a href="http://kb.cnblogs.com/page/200929/" target="_blank">Node.js 究竟是什么？</a><br> ·  <a href="http://kb.cnblogs.com/page/194376/" target="_blank">Habya'a（临时拼凑的组件）与技术债务</a><br> ·  <a href="http://kb.cnblogs.com/page/200528/" target="_blank">关于在线教育和线下教育的六个问题</a><br> ·  <a href="http://kb.cnblogs.com/page/199787/" target="_blank">别错把需求当市场</a><br></div>» <a href="http://kb.cnblogs.com/" target="_blank">更多知识库文章...</a></div></div></div>
<script type="text/javascript">
var enableGoogleAd = true;
var googletag = googletag || {};
googletag.cmd = googletag.cmd || [];
fixPostBodyFormat();
loadAdUnderPost();
</script>
<div id="HistoryToday" class="c_ad_block"></div>
<script type="text/javascript">
loadBlogSignature();
LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
</script>
<script type="text/javascript">
    $.ajax({ url: 'http://counter.cnblogs.com/blog/post/' + cb_entryId, type: 'get', dataType: 'script', cache: true });
</script>
</div>

        </div>
        
	    <script language="javascript" type="text/javascript">
	               var m = window.__blog.contentRendered;
	               if (m) { m(__$("content")); }
        </script>

	    <div id="sidebar">
			    
<div id="about">
<div>
<h2 id="about_title">About</h2>
<div id="about_body">
<div id="blog-news" style=""><p><img style="float:left;margin-right:10px" alt="" src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/tom.jpg" height="150" width="150"><strong>目前工作</strong>：项目管理（PMP）<br>
<strong>曾获认证</strong>：MCP、MCSE、MCDBA、MCTS、MCITP、MCPD、PMP、MVP<br>
<strong>略有小成</strong>：软件架构、设计模式、OOD、OOP、DI、IOC、AOP、SOA<br>
<strong>兴趣爱好</strong>：技术、管理、英文、吃喝玩乐乱侃空
</p>
<p style="clear:both"></p>
<br>
熟悉Waterfall、Agile(Scrum&amp;XP)，染指C#、ASP.NET、MVC、EF、NHibernate、SQL Server、Oracle、JavaScript、HTML5、CSS3、JQuery、Knockout、Silverlight、WPF、WCF、ADFS等技术<br>
<br>
<span style="color: red;">注：</span>本人翻译的技术文章皆不是逐句翻译，而是按照自己的理解翻译的（当然也去除了一些不影响理解但本人实在不知道如何组织的句子）。<br>
<br>
<p style="clear:both"></p>
<fieldset> <legend>作品上市</legend>
<p><img style="float:left;margin-right:10px" src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/shupi.jpg" alt="" width="150">
[1] <a href="http://product.china-pub.com/3769483" target="_blank">China-Pub</a>
<br>
<br>
</p>
<p style="clear:both"></p><br>
<p><img style="float:left;margin-right:10px" src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/o_jsdp.jpg" alt="" width="150">
[1] <a href="http://book.jd.com/11253887.html" target="_blank">京东商城</a>
<br>
[2] <a href="http://www.amazon.cn/JavaScript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%BE%8E-Addy-Osmani/dp/B00D6MT3LG/" target="_blank">卓越亚马逊</a>
<br>
[3] <a href="http://product.dangdang.com/product.aspx?product_id=23266635" target="_blank">当当网</a>
<br>
[4] <a href="http://product.china-pub.com/3768064" target="_blank">China-Pub</a>
<br>
[5] <a href="http://book.douban.com/subject/24744217/" target="_blank">豆瓣网</a>
<br>
[6] <a href="http://s.taobao.com/search?q=JavaScript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20Addy%20Osmani" target="_blank">淘宝网</a>
<br>
<br>
</p>
<div style="clear:both"></div>
<p><img style="float:left;margin-right:10px" src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/o_EloquentJavaScript.jpg" alt="" width="150">
[1] <a href="http://book.360buy.com/11091494.html" target="_blank">京东商城</a>
<br>
[2] <a href="http://www.amazon.cn/JavaScript%E7%BC%96%E7%A8%8B%E7%B2%BE%E8%A7%A3-%E5%93%88%E5%BC%97%E8%B4%9D%E5%85%8B/dp/B009A7D25E/ref=sr_1_11" target="_blank">卓越亚马逊</a>
<br>
[3] <a href="http://union.dangdang.com/transfer/transfer.aspx?from=P-263982&backurl=http://product.dangdang.com/product.aspx?product_id=22873894" target="_blank">当当网</a>
<br>
[4] <a href="http://product.china-pub.com/3684096" target="_blank">China-Pub</a>
<br>
[5] <a href="http://book.douban.com/subject/19933548/" target="_blank">豆瓣网</a>
<br>
[6] <a href="http://s.taobao.com/search?q=JavaScript%E7%BC%96%E7%A8%8B%E7%B2%BE%E8%A7%A3" target="_blank">淘宝网</a>
<br>
<br>
<a href="http://www.cnblogs.com/TomXu/archive/2012/10/21/JSError.html" target="_blank">本书勘误</a>
</p>

</fieldset><div id="profile_block">昵称：<a href="http://home.cnblogs.com/u/TomXu/">汤姆大叔</a><br>园龄：<a href="http://home.cnblogs.com/u/TomXu/" title="入园时间：2011-11-10">2年3个月</a><br>荣誉：<a href="http://www.cnblogs.com/expert/">推荐博客</a><br>粉丝：<a href="http://home.cnblogs.com/u/TomXu/followers/">4759</a><br>关注：<a href="http://home.cnblogs.com/u/TomXu/followees/">19</a><div id="p_b_follow"><a href="javascript:void(0);" onclick="cnblogs.UserManager.FollowBlogger(&#39;65b02d3c-5b0b-e111-b7b9-842b2b196315&#39;)">+加关注</a></div></div></div>
<script type="text/javascript">loadBlogNews();</script>
</div>
</div>
</div>

			    <script language="javascript" type="text/javascript">
                        var m = window.__blog.aboutRendered;
                        if (m) { m(__$("about")); }
                </script>
                
<script type="text/javascript">
function zzk_go()
{
	var blogapp = 'TomXu';
	var keystr = encodeURIComponent("blog:"+blogapp+" "+document.getElementById('q').value);
    window.location = "http://zzk.cnblogs.com/s?w="+keystr;
}
function zzk_go_enter(event)
{
	if(event.keyCode == 13)
	{
	    zzk_go();
	    return false;
	}
}
</script>

<div id="mySearchWrapper">
    <div id="mySearch">
        <input type="image" src="./Knockout应用开发指南 第七章：Mapping插件 - 汤姆大叔 - 博客园_files/btnsearch.gif" id="btnZzk" class="submit" onclick="zzk_go();return false;">
        <label class="lb_search"><input type="text" id="q" onkeydown="return zzk_go_enter(event);" class="keyword"></label>
    </div>
</div>

                <script language="javascript" type="text/javascript">
                                var m = window.__blog.searchFormRendered;
                                if (m) { m(__$("searchform")); }
                </script>
                <div id="sideMain">
                <div id="side-recent-posts">
<h2>最新随笔</h2>
 <ul class="bullet">

		<li><a href="http://www.cnblogs.com/TomXu/archive/2013/06/14/3135050.html">新书《JavaScript设计模式 》出版，感谢支持</a></li>
	
		<li><a href="http://www.cnblogs.com/TomXu/archive/2012/10/22/2733027.html">《JavaScript编程精解》回馈网友，汤姆大叔送书30本</a></li>
	
		<li><a href="http://www.cnblogs.com/TomXu/archive/2012/10/21/JSError.html">《JavaScript编程精解》勘误</a></li>
	
		<li><a href="http://www.cnblogs.com/TomXu/archive/2012/07/26/2581268.html">深入理解JavaScript系列（结局篇）</a></li>
	
		<li><a href="http://www.cnblogs.com/TomXu/archive/2012/07/24/2581239.html">深入理解JavaScript系列（50）：Function模式（下篇）</a></li>
	
		<li><a href="http://www.cnblogs.com/TomXu/archive/2012/07/23/2580701.html">深入理解JavaScript系列（49）：Function模式（上篇）</a></li>
	
		<li><a href="http://www.cnblogs.com/TomXu/archive/2012/04/26/2443010.html">深入理解JavaScript系列（48）：对象创建模式（下篇）</a></li>
	
		<li><a href="http://www.cnblogs.com/TomXu/archive/2012/04/25/2439527.html">深入理解JavaScript系列（47）：对象创建模式（上篇）</a></li>
	
		<li><a href="http://www.cnblogs.com/TomXu/archive/2012/04/24/2438050.html">深入理解JavaScript系列（46）：代码复用模式（推荐篇）</a></li>
	
		<li><a href="http://www.cnblogs.com/TomXu/archive/2012/04/23/2438005.html">深入理解JavaScript系列（45）：代码复用模式（避免篇）</a></li>
	
</ul>
</div><div id="side-recent-comments">
    <h2>最新评论</h2>
    <ul class="voice">
    
            <li>
                <a href="http://www.cnblogs.com/TomXu/archive/2012/01/09/2306329.html#2887741">Re:深入理解JavaScript系列（7）：S.O.L.I.D五大原则之开闭原则OCP</a>
            <br>
            <a class="child" href="http://www.cnblogs.com/TomXu/archive/2012/01/09/2306329.html#2887741">
                @蓝丶 sky引用@chasefornone如果先设置my的renderInput，基类中的renderInput就会覆盖你重写的那个函数，这样就没用了。而写在后面可以覆盖基类中的renderInpu...
                 -- LoveJenny
            </a>
            </li>
        
            <li>
                <a href="http://www.cnblogs.com/TomXu/archive/2011/12/15/2288411.html#2887325">Re:深入理解JavaScript系列</a>
            <br>
            <a class="child" href="http://www.cnblogs.com/TomXu/archive/2011/12/15/2288411.html#2887325">
                @linjisong<br>麻烦发给我一份，这是我的邮箱: wyf061@126.com<br>谢谢。
                 -- Vincent Wu
            </a>
            </li>
        
            <li>
                <a href="http://www.cnblogs.com/TomXu/archive/2012/01/06/2305513.html#2887245">Re:深入理解JavaScript系列（6）：S.O.L.I.D五大原则之单一职责SRP</a>
            <br>
            <a class="child" href="http://www.cnblogs.com/TomXu/archive/2012/01/06/2305513.html#2887245">
                @汤姆大叔引用引用引用600120：感觉大叔学习精力充沛哦，问个个人问题，大叔有孩子了没？有了，儿子，所以不担心身体了，也敢喝可乐了，嘿嘿有了儿子，就更要担心身体了，只是不用担心自己不孕不育了，呵呵。
                 -- LoveJenny
            </a>
            </li>
        
            <li>
                <a href="http://www.cnblogs.com/TomXu/archive/2011/12/31/2289423.html#2887188">Re:深入理解JavaScript系列（4）：立即调用的函数表达式</a>
            <br>
            <a class="child" href="http://www.cnblogs.com/TomXu/archive/2011/12/31/2289423.html#2887188">
                @unbreakable引用@shinebob(function(){})()还记的我们var a=function(){},用a()来调用这个方法吧！此处a看做一个函数对象引用,那我们可以看做(fu...
                 -- LoveJenny
            </a>
            </li>
        
            <li>
                <a href="http://www.cnblogs.com/TomXu/archive/2012/04/11/2435452.html#2883158">Re:深入理解JavaScript系列（39）：设计模式之适配器模式</a>
            <br>
            <a class="child" href="http://www.cnblogs.com/TomXu/archive/2012/04/11/2435452.html#2883158">
                @troy huang我觉得是没有必要执行这个操作，TurkeyAdapter包装类传过去的对象参数只要是WildTurkey类的子对象就可以了吧，...
                 -- js蜗牛
            </a>
            </li>
        
            <li>
                <a href="http://www.cnblogs.com/TomXu/archive/2011/12/17/2288579.html#2882937">Re:大叔手记（9）：小心使用IHttpHandler下的IsReusable属性</a>
            <br>
            <a class="child" href="http://www.cnblogs.com/TomXu/archive/2011/12/17/2288579.html#2882937">
                本意应该是：IHttpHandler的实现类，要注意多线程问题，<br>而不是ProcessRequest (HttpContext context)中的context 有问题
                 -- 个人知识管理
            </a>
            </li>
        
            <li>
                <a href="http://www.cnblogs.com/TomXu/archive/2011/12/17/2288579.html#2882908">Re:大叔手记（9）：小心使用IHttpHandler下的IsReusable属性</a>
            <br>
            <a class="child" href="http://www.cnblogs.com/TomXu/archive/2011/12/17/2288579.html#2882908">
                有误！<br>应是不能使用 HttpContext.Current来获取Request等
                 -- 个人知识管理
            </a>
            </li>
        
            <li>
                <a href="http://www.cnblogs.com/TomXu/archive/2012/01/18/2312463.html#2881687">Re:深入理解JavaScript系列（14）：作用域链(Scope Chain)</a>
            <br>
            <a class="child" href="http://www.cnblogs.com/TomXu/archive/2012/01/18/2312463.html#2881687">
                @eeeeeeebar函数的执行上下文：barExecution Context={ 变量对象: barAO, this:foo, Scope Chain:[barAO,globalVO]}barAO...
                 -- mciiv
            </a>
            </li>
        
            <li>
                <a href="http://www.cnblogs.com/TomXu/archive/2011/12/29/2290308.html#2881218">Re:深入理解JavaScript系列（2）：揭秘命名函数表达式</a>
            <br>
            <a class="child" href="http://www.cnblogs.com/TomXu/archive/2011/12/29/2290308.html#2881218">
                测试了一下，IE9以下的浏览器除了回忽略if语句，也会忽略return语句，直接解析命名表达式：	var f = (function() { if (false) { return function ...
                 -- islerning
            </a>
            </li>
        
            <li>
                <a href="http://www.cnblogs.com/TomXu/archive/2012/01/16/2309728.html#2880668">Re:深入理解JavaScript系列（12）：变量对象（Variable Object）</a>
            <br>
            <a class="child" href="http://www.cnblogs.com/TomXu/archive/2012/01/16/2309728.html#2880668">
                引用变量对象(缩写为VO)是一个与执行上下文相关的特殊对象，它存储着在上下文中声明的以下内容： 变量 (var, 变量声明); 函数声明 (FunctionDeclaration, 缩写为FD); 函...
                 -- mciiv
            </a>
            </li>
        
    </ul>
</div></div>
                <div id="sideRight">
                <div id="side-archives">
<h2>随笔档案</h2>
<ul class="date">

 <li><a href="http://www.cnblogs.com/TomXu/archive/2013/06.html">2013年6月(1)</a></li>
 

 <li><a href="http://www.cnblogs.com/TomXu/archive/2012/10.html">2012年10月(2)</a></li>
 

 <li><a href="http://www.cnblogs.com/TomXu/archive/2012/07.html">2012年7月(3)</a></li>
 

 <li><a href="http://www.cnblogs.com/TomXu/archive/2012/04.html">2012年4月(12)</a></li>
 

 <li><a href="http://www.cnblogs.com/TomXu/archive/2012/03.html">2012年3月(5)</a></li>
 

 <li><a href="http://www.cnblogs.com/TomXu/archive/2012/02.html">2012年2月(18)</a></li>
 

 <li><a href="http://www.cnblogs.com/TomXu/archive/2012/01.html">2012年1月(14)</a></li>
 

 <li><a href="http://www.cnblogs.com/TomXu/archive/2011/12.html">2011年12月(45)</a></li>
 

 <li><a href="http://www.cnblogs.com/TomXu/archive/2011/11.html">2011年11月(28)</a></li>
 

</ul>
</div>






















<div id="blog-calendar" style=""><table id="blogCalendar" class="Cal" cellspacing="0" cellpadding="0" title="日历">
	<tbody><tr><td colspan="7"><table class="CalTitle" cellspacing="0">
		<tbody><tr><td class="CalNextPrev"><a href="javascript:void(0);" onclick="loadBlogCalendar(&#39;2014/02/01&#39;);return false;">&lt;</a></td><td align="center">2014年3月</td><td class="CalNextPrev" align="right"><a href="javascript:void(0);" onclick="loadBlogCalendar(&#39;2014/04/01&#39;);return false;">&gt;</a></td></tr>
	</tbody></table></td></tr><tr><th class="CalDayHeader" align="center" abbr="日" scope="col">日</th><th class="CalDayHeader" align="center" abbr="一" scope="col">一</th><th class="CalDayHeader" align="center" abbr="二" scope="col">二</th><th class="CalDayHeader" align="center" abbr="三" scope="col">三</th><th class="CalDayHeader" align="center" abbr="四" scope="col">四</th><th class="CalDayHeader" align="center" abbr="五" scope="col">五</th><th class="CalDayHeader" align="center" abbr="六" scope="col">六</th></tr><tr><td class="CalOtherMonthDay" align="center">23</td><td class="CalOtherMonthDay" align="center">24</td><td class="CalOtherMonthDay" align="center">25</td><td class="CalOtherMonthDay" align="center">26</td><td class="CalOtherMonthDay" align="center">27</td><td class="CalOtherMonthDay" align="center">28</td><td class="CalWeekendDay" align="center">1</td></tr><tr><td class="CalWeekendDay" align="center">2</td><td align="center">3</td><td class="CalTodayDay" align="center">4</td><td align="center">5</td><td align="center">6</td><td align="center">7</td><td class="CalWeekendDay" align="center">8</td></tr><tr><td class="CalWeekendDay" align="center">9</td><td align="center">10</td><td align="center">11</td><td align="center">12</td><td align="center">13</td><td align="center">14</td><td class="CalWeekendDay" align="center">15</td></tr><tr><td class="CalWeekendDay" align="center">16</td><td align="center">17</td><td align="center">18</td><td align="center">19</td><td align="center">20</td><td align="center">21</td><td class="CalWeekendDay" align="center">22</td></tr><tr><td class="CalWeekendDay" align="center">23</td><td align="center">24</td><td align="center">25</td><td align="center">26</td><td align="center">27</td><td align="center">28</td><td class="CalWeekendDay" align="center">29</td></tr><tr><td class="CalWeekendDay" align="center">30</td><td align="center">31</td><td class="CalOtherMonthDay" align="center">1</td><td class="CalOtherMonthDay" align="center">2</td><td class="CalOtherMonthDay" align="center">3</td><td class="CalOtherMonthDay" align="center">4</td><td class="CalOtherMonthDay" align="center">5</td></tr>
</tbody></table></div><div id="side-link-341714">
    <h2>[01]汤姆大叔系列博文</h2>
    <ul class="chain">
    
        <li>
        <a href="http://www.cnblogs.com/TomXu/archive/2011/12/10/2283385.html" target="_blank">[01]大叔手记全集</a></li>
    
        <li>
        <a href="http://www.cnblogs.com/TomXu/archive/2011/11/21/2257154.html" target="_blank">[02]Knockout应用开发指南</a></li>
    
        <li>
        <a href="http://www.cnblogs.com/TomXu/archive/2011/11/25/2263050.html" target="_blank">[03]微软ASP.NET站点部署指南</a></li>
    
        <li>
        <a href="http://www.cnblogs.com/TomXu/archive/2011/12/06/2277499.html" target="_blank">[04]HTML5学习笔记简明版</a></li>
    
        <li>
        <a href="http://www.cnblogs.com/TomXu/archive/2011/12/15/2284773.html" target="_blank">[05]大叔翻译博文索引</a></li>
    
        <li>
        <a href="http://www.cnblogs.com/TomXu/archive/2011/12/15/2288411.html" target="_blank">[06]深入理解JavaScript系列</a></li>
    
    </ul>
</div><div id="side-link-345292">
    <h2>[03]推荐博友算法相关</h2>
    <ul class="chain">
    
        <li>
        <a href="http://www.cnblogs.com/huangxincheng/category/340146.html" target="_blank">[01]算法系列15天速成</a></li>
    
        <li>
        <a href="http://www.cnblogs.com/jinzhao/archive/2011/11/30/2268569.html" target="_blank">[02]算法实现大全</a></li>
    
        <li>
        <a href="http://www.cnblogs.com/tuyile006/category/95974.html" target="_blank">[03]常用算法</a></li>
    
        <li>
        <a href="http://www.cnblogs.com/Jax/category/57279.html" target="_blank">[04]算法大全</a></li>
    
        <li>
        <a href="http://www.cnblogs.com/weidagang2046/archive/2009/07/31/1535902.html" target="_blank">[05]博客积分算法探讨</a></li>
    
        <li>
        <a href="http://www.cnblogs.com/chehaoj/archive/2010/11/23/1885497.html" target="_blank">[06]常见算法推演</a></li>
    
        <li>
        <a href="http://www.cnblogs.com/wangfupeng1988/archive/2011/12/26/2302216.html" target="_blank">[07]眼睛直观感受几种常用排序算法</a></li>
    
    </ul>
</div></div>
                <div id="sideLeft">            
                <div id="side-categories">
<h2>随笔分类</h2>
<ul class="folder">

 <li><a class="mini_rss" href="http://www.cnblogs.com/TomXu/category/335665.html/rss">Rss</a>
 <a href="http://www.cnblogs.com/TomXu/category/335665.html">[01].Net Framework(4)</a> </li>

 <li><a class="mini_rss" href="http://www.cnblogs.com/TomXu/category/338101.html/rss">Rss</a>
 <a href="http://www.cnblogs.com/TomXu/category/338101.html">[02]C#(3)</a> </li>

 <li><a class="mini_rss" href="http://www.cnblogs.com/TomXu/category/338102.html/rss">Rss</a>
 <a href="http://www.cnblogs.com/TomXu/category/338102.html">[03]ASP.NET(5)</a> </li>

 <li><a class="mini_rss" href="http://www.cnblogs.com/TomXu/category/335666.html/rss">Rss</a>
 <a href="http://www.cnblogs.com/TomXu/category/335666.html">[04]ASP.NET MVC(8)</a> </li>

 <li><a class="mini_rss" href="http://www.cnblogs.com/TomXu/category/336175.html/rss">Rss</a>
 <a href="http://www.cnblogs.com/TomXu/category/336175.html">[05]HTML5/CSS3(16)</a> </li>

 <li><a class="mini_rss" href="http://www.cnblogs.com/TomXu/category/338104.html/rss">Rss</a>
 <a href="http://www.cnblogs.com/TomXu/category/338104.html">[06]JS/jQuery(62)</a> </li>

 <li><a class="mini_rss" href="http://www.cnblogs.com/TomXu/category/337109.html/rss">Rss</a>
 <a href="http://www.cnblogs.com/TomXu/category/337109.html">[07]Web开发(57)</a> </li>

 <li><a class="mini_rss" href="http://www.cnblogs.com/TomXu/category/336771.html/rss">Rss</a>
 <a href="http://www.cnblogs.com/TomXu/category/336771.html">[08]Knockout(15)</a> </li>

 <li><a class="mini_rss" href="http://www.cnblogs.com/TomXu/category/338040.html/rss">Rss</a>
 <a href="http://www.cnblogs.com/TomXu/category/338040.html">[09]配置管理(13)</a> </li>

 <li><a class="mini_rss" href="http://www.cnblogs.com/TomXu/category/337899.html/rss">Rss</a>
 <a href="http://www.cnblogs.com/TomXu/category/337899.html">[10]项目管理(3)</a> </li>

 <li><a class="mini_rss" href="http://www.cnblogs.com/TomXu/category/340064.html/rss">Rss</a>
 <a href="http://www.cnblogs.com/TomXu/category/340064.html">[11]大叔手记(22)</a> </li>

</ul>
</div><div id="side-top-posts-custom">
<h2>推荐排行榜</h2>
	<div id="TopDiggPostsBlock"><ul><li><a href="http://www.cnblogs.com/TomXu/archive/2011/12/15/2288411.html">1. 深入理解JavaScript系列(260)</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2011/12/28/2286877.html">2. 深入理解JavaScript系列（1）：编写高质量JavaScript代码的基本要点(249)</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2011/12/21/2292722.html">3. 大叔手记（12）：我的一次面试经历（谈大叔如何应对面试官）(225)</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2012/02/23/2364425.html">4. 大叔手记（21）：汤姆大叔博客园开博100天总结(197)</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2011/12/29/2290308.html">5. 深入理解JavaScript系列（2）：揭秘命名函数表达式(124)</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2011/12/30/2288372.html">6. 深入理解JavaScript系列（3）：全面解析Module模式(104)</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2012/01/12/2308594.html">7. 深入理解JavaScript系列（10）：JavaScript核心（晋级高手必读篇）(98)</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2012/01/05/2305453.html">8. 深入理解JavaScript系列（5）：强大的原型和原型链(93)</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2011/12/19/2291448.html">9. 大叔手记（10）：别再让面试官问你单例（暨6种实现方式让你堵住面试官的嘴）(85)</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2011/11/22/2258849.html">10. 最锋利的Visual Studio Web开发工具扩展：Web Essentials详解(72)</a></li></ul></div>
</div><div id="side-top-posts">
<h2>阅读排行榜</h2>
	<div id="TopViewPostsBlock"><ul><li><a href="http://www.cnblogs.com/TomXu/archive/2011/12/15/2288411.html">1. 深入理解JavaScript系列(141709)</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2011/12/28/2286877.html">2. 深入理解JavaScript系列（1）：编写高质量JavaScript代码的基本要点(60459)</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2011/11/21/2257154.html">3. Knockout应用开发指南（完整版） 目录索引(34684)</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2011/12/29/2290308.html">4. 深入理解JavaScript系列（2）：揭秘命名函数表达式(32605)</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2012/10/22/2733027.html">5. 《JavaScript编程精解》回馈网友，汤姆大叔送书30本(29833)</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2011/12/21/2292722.html">6. 大叔手记（12）：我的一次面试经历（谈大叔如何应对面试官）(25719)</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2011/12/30/2288372.html">7. 深入理解JavaScript系列（3）：全面解析Module模式(24692)</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2012/01/12/2308594.html">8. 深入理解JavaScript系列（10）：JavaScript核心（晋级高手必读篇）(23956)</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2011/12/06/2277510.html">9. 汤姆大叔博客索引(22745)</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2012/01/05/2305453.html">10. 深入理解JavaScript系列（5）：强大的原型和原型链(20925)</a></li></ul></div>
</div><div id="side-link-342866">
    <h2>[02]汤姆大叔推荐单篇</h2>
    <ul class="chain">
    
        <li>
        <a href="http://www.cnblogs.com/TomXu/archive/2011/12/14/2286225.html" target="_blank">[01]大型JavaScript应用架构模式</a></li>
    
        <li>
        <a href="http://www.cnblogs.com/TomXu/archive/2011/12/19/2291448.html" target="_blank">[02]别再让面试官问你单例</a></li>
    
        <li>
        <a href="http://www.cnblogs.com/TomXu/archive/2011/12/21/2292722.html" target="_blank">[03]大叔的一次面试经历</a></li>
    
    </ul>
</div><div id="side-link-345293">
    <h2>[04]推荐博友精选好文</h2>
    <ul class="chain">
    
        <li>
        <a href="http://www.cnblogs.com/peterzb/archive/2009/06/14/1502918.html" target="_blank">[01]C# WinForm开发系列</a></li>
    
        <li>
        <a href="http://www.cnblogs.com/lifepoem/archive/2011/12/16/2288017.html" target="_blank">[02]LINQ之路</a></li>
    
        <li>
        <a href="http://www.cnblogs.com/xiao-f/archive/2011/12/19/lang.html" target="_blank">[03]Javascript面向对象扩展库</a></li>
    
    </ul>
</div><div id="side-link-348581">
    <h2>[05]推荐外部精选好文</h2>
    <ul class="chain">
    
        <li>
        <a href="http://kangax.github.com/es5-compat-table/" target="_blank">[01]ECMAScript 5浏览器兼容表</a></li>
    
        <li>
        <a href="http://kb.cnblogs.com/page/127995/" target="_blank">[02]Javascript 面向对象编程</a></li>
    
    </ul>
</div></div>
			    
			    <div id="sideContainer"></div>
                <script language="javascript" type="text/javascript">
                    $.ajax({
                        url: '/' + currentBlogApp + '/mvc/blog/Minyx2_Lite_SideColumn.aspx',
                        data: '{}',
                        type: 'post',
                        dataType: 'text',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            if (data) {
                                $("#sideContainer").html(data);
                                if ($("#blog-calendar").length) {
                                    loadBlogCalendar();
                                }
                                loadBlogSideBlocks();
                                var m = window.__blog.sideContainerRendered;
                                if (m) { m(__$("sideContainer")); }
                                window.__blog.sidebar.__layout();
                            }
                        }
                    });
                    
                 </script>       	
			                      
 		    </div>
     		
	        <script language="javascript" type="text/javascript">
	        var m = window.__blog.sidebarRendered;
	        if (m) { m(__$("sidebar")); }
                </script>        
     </div>
     
        <script language="javascript" type="text/javascript">
            var m = window.__blog.wrapperRendered;
            if (m) { m(__$("wrapper")); }
        </script>

</div>
<!-- end of container -->
    
<script language="javascript" type="text/javascript">
    var m = window.__blog.containerRendered;
    if (m) { m(__$("container")); }
</script>

<div id="footer">
        
<p id="logoFoot">
    <a href="http://www.spiga.com.mx/" title="Agencia Interactiva Spiga">www.spiga.com.mx</a>
</p>
<div class="footText">
<p>
Copyright ©2014 汤姆大叔
</p>
<p>
<a href="http://www.cnblogs.com/">博客园</a>
</p>
</div>
</div><!--end: footer -->

<!--PageEndHtml Block Begin-->
<script type="text/javascript">
    $(document).ready(function () {
        $("body").prepend($("#div_digg").css({
            "position": "fixed", "right": "0px", "bottom": "0px", "z-index": "10", "background-color": "white", "margin": "10px", "padding": "10px", "border": "1px solid #cccccc"
        }));
      $(".cnblogs_code_toolbar").hide();
    });
</script>
<!--PageEndHtml Block End-->


<iframe id="google_osd_static_frame_2890947344712" name="google_osd_static_frame" style="display: none; width: 0px; height: 0px; "></iframe></body></html>